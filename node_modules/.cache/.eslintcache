[{"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\index.js":"1","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\App.js":"2","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Home.js":"3","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\firebase-config.js":"4","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Register.js":"5","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\ForgotPass.js":"6","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Navbar.js":"7","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\NewPost.js":"8","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Tweets.js":"9","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\useOnline.js":"10"},{"size":733,"mtime":1673549250301,"results":"11","hashOfConfig":"12"},{"size":4299,"mtime":1673549261961,"results":"13","hashOfConfig":"12"},{"size":2849,"mtime":1674497899948,"results":"14","hashOfConfig":"12"},{"size":514,"mtime":1674497887739,"results":"15","hashOfConfig":"12"},{"size":4387,"mtime":1674577579534,"results":"16","hashOfConfig":"12"},{"size":4769,"mtime":1674497894546,"results":"17","hashOfConfig":"12"},{"size":2801,"mtime":1671552489578,"results":"18","hashOfConfig":"12"},{"size":3195,"mtime":1674716355800,"results":"19","hashOfConfig":"12"},{"size":1860,"mtime":1674566941407,"results":"20","hashOfConfig":"12"},{"size":615,"mtime":1674410870045,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rv3bek",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\index.js",[],[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\App.js",[],[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Home.js",["57","58","59","60","61","62","63","64","65"],[],"import React, { useRef, lazy } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport Nav from \"./Navbar\";\r\nimport { Auth } from \"../firebase-config\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport Tweets from \"./Tweets\";\r\nimport moment from \"moment\";\r\nimport useOnline from \"./useOnline\";\r\n\r\n// const Tweets = lazy(() => import(\"./Tweets\"));\r\n\r\n// const isOnline = useOnline();\r\n// if (!isOnline) {\r\n//   return <h1>ðŸ”´ Offline, please check your internet connection!!</h1>;\r\n// }\r\n\r\nfunction Home() {\r\n  const [user, setUser] = useState({});\r\n  const [tweet, setTweet] = useState({});\r\n  const [value, setValue] = useState({});\r\n  const [meetings, setMeetings] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  const tweetInputRef = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(Auth, (currentUser) => {\r\n      setUser(currentUser);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://fir-auth-5ce51-default-rtdb.firebaseio.com/meetings.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const meetings = [];\r\n        for (const key in data) {\r\n          const meeting = { id: key, ...data[key] };\r\n          meetings.push(meeting);\r\n        }\r\n        setMeetings(meetings);\r\n        console.log(meetings);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div className=\" flex flex-col lg:flex-row text-sm dark:bg-black dark:text-white\">\r\n        <div className=\"w-full lg:w-1/4 pl-4 lg:pl-0 pr-6 mt-8 mb-4 dark:bg-black dark:text-white\"></div>\r\n        <div className=\"w-full lg:w-1/2 bg-white mb-4 dark:bg-black dark:text-white\">\r\n          <div className=\"flex mb-42 mb-12\">\r\n            <div>\r\n              <h1 className=\"px-0 py-2 text-2xl font-bold text-white\">\r\n                Hello {user.email}\r\n              </h1>\r\n\r\n              <h1 className=\"text-lg\">Here are your tweets &#129303;</h1>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={loading ? \"loading\" : \"d-none\"}>\r\n            {Array(1)\r\n              .fill(\"\")\r\n              .map((e, index) => (\r\n                <div className=\"loading-animation\">loading...</div>\r\n              ))}\r\n          </div>\r\n          <div\r\n            className={\r\n              tweet.length === 0 ? \"container text-center flex\" : \"d-none\"\r\n            }\r\n          >\r\n            <p>No Tweets available!!</p>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 p-2\">\r\n            {meetings.map((meetings) => {\r\n              return <Tweets tweets={meetings.tweet} name={user.email} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n",[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\firebase-config.js",[],[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Register.js",["66"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { Alert } from \"@material-tailwind/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { Auth } from \"./firebase-config\";\r\n\r\nfunction App() {\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({});\r\n  const [userName, setUserName] = useState({});\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(Auth, (currentUser) => {\r\n      setUser(currentUser);\r\n    });\r\n  }, []);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await createUserWithEmailAndPassword(\r\n        Auth,\r\n        registerEmail,\r\n        registerPassword,\r\n        userName\r\n      );\r\n\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(error.message);\r\n    }\r\n    navigate(\"/register\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"flex justify-center items-center h-screen bg-gray-100 dark:bg-black \">\r\n        <div className=\"border-2 max-w-md w-full bg-white rounded p-6 space-y-4 dark:bg-gray-900 dark:text-white\">\r\n          {error && (\r\n            <Alert\r\n              show={show}\r\n              dismissible={{\r\n                onClose: () => setShow(false),\r\n              }}\r\n              className=\"bg-red-100 border w-full border-red-500 text-red-500 px-4 py-3 rounded relative\"\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <h1 className=\"text-white text-center\">WELCOME</h1>\r\n\r\n          <div className=\"mb-4 text-center\">\r\n            <h2 className=\"text-lg font-bold\">Sign Up</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit} className=\"mt-10 \">\r\n            <div>\r\n              <label className=\"block mb-1\">Username</label>\r\n              <input\r\n                className=\"dark:bg-gray-900 dark:text-white w-full p-4 text-sm bg-gray-50 focus:outline-none border border-gray-200 rounded text-gray-600\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your username\"\r\n                required\r\n                onChange={(event) => {\r\n                  setUserName(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <label className=\"block mb-1\">Email</label>\r\n              <input\r\n                className=\"dark:bg-gray-900 dark:text-white w-full p-4 text-sm bg-gray-50 focus:outline-none border border-gray-200 rounded text-gray-600\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your email \"\r\n                required\r\n                onChange={(event) => {\r\n                  setRegisterEmail(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"flex justify-between mt-3\">\r\n                <label className=\"block mb-1 \">Password</label>\r\n              </div>\r\n              <input\r\n                type=\"password\"\r\n                className=\"dark:bg-gray-900 dark:text-white w-full p-4 text-sm bg-gray-50 focus:outline-none border border-gray-200 rounded text-gray-600\"\r\n                placeholder=\"Enter your password\"\r\n                required\r\n                onChange={(event) => {\r\n                  setRegisterPassword(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full py-4 bg-blue-600 hover:bg-blue-700 rounded text-sm font-bold text-gray-50 transition duration-100\"\r\n              >\r\n                Register\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mt-2\">\r\n              <p className=\"text-gray-600\">\r\n                Already have a account?{\" \"}\r\n                <a href=\"/\" className=\"text-white\">\r\n                  Login &#129062;\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\ForgotPass.js",["67"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport \"../index.css\";\r\nimport { useState } from \"react\";\r\nimport { sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { Auth } from \"../firebase-config\";\r\nimport { Alert } from \"@material-tailwind/react\";\r\n\r\nfunction App() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [show, setShow] = useState(true);\r\n\r\n  async function triggerResetEmail(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await sendPasswordResetEmail(Auth, email);\r\n      setSuccess(\"Password reset email sent\");\r\n      alert(\"Password reset email sent\");\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"flex justify-center items-center h-screen bg-gray-100 dark:bg-black \">\r\n        <div className=\"border-2 max-w-md w-full bg-white rounded p-6 space-y-4 dark:bg-gray-900 dark:text-white\">\r\n          {error && (\r\n            <Alert\r\n              show={show}\r\n              dismissible={{\r\n                onClose: () => setShow(false),\r\n              }}\r\n              className=\"bg-red-100 border w-full border-red-500 text-red-500 px-4 py-3 rounded relative\"\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              show={show}\r\n              dismissible={{\r\n                onClose: () => setShow(false),\r\n              }}\r\n              className=\"bg-blue-100 border w-full border-blue-500 text-blue-500 px-4 py-3 rounded relative\"\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          {/* {success && (\r\n            <div class=\"bg-red-100 border border-blue-500 text-blue-500 px-4 py-3 rounded relative\" role=\"alert\" show={show}\r\n            dismissible={{\r\n              onClose: () => setShow(false),\r\n            }}>\r\n            <span class=\"block sm:inline\">{success}</span>\r\n            <span class=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\r\n              <svg class=\"fill-current h-6 w-6 text-blue-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><title>Close</title><path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"/></svg>\r\n            </span>\r\n          </div>\r\n          )}\r\n          {error && (\r\n            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\r\n            <span class=\"block sm:inline\">{error}</span>\r\n            <span class=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\r\n              <svg class=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><title>Close</title><path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"/></svg>\r\n            </span>\r\n          </div>\r\n          )} */}\r\n          <div className=\"mb-4 text-center\">\r\n            <p className=\"text-gray-600\">WELCOME </p>\r\n\r\n            <h2 className=\"text-lg font-bold\">Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={triggerResetEmail} className=\"mt-10 \">\r\n            <div>\r\n              <label className=\"block mb-1\">Email </label>\r\n              <input\r\n                className=\"dark:bg-gray-900 dark:text-white w-full p-4 text-sm bg-gray-50 focus:outline-none border border-gray-200 rounded text-gray-600\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your email \"\r\n                required\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full py-4 bg-blue-600 hover:bg-blue-700 rounded text-sm font-bold text-gray-50 transition duration-100\"\r\n              >\r\n                Reset Password\r\n              </button>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mt-2\">\r\n              <p className=\"text-gray-600\">\r\n                Not registered yet? &nbsp;\r\n                <a href=\"/register\" className=\"text-white\">\r\n                  Register &#129062;\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Navbar.js",["68","69","70"],[],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport {\r\n  Navbar,\r\n  MobileNav,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-tailwind/react\";\r\nimport { Auth } from \"../firebase-config\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\n \r\nfunction Nav() {\r\n  const [openNav, setOpenNav] = useState(false);  \r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(Auth, (currentUser) => {\r\n      setUser(currentUser);\r\n    });\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    await signOut(Auth);\r\n    navigate(\"/\");\r\n  };\r\n\r\n \r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => window.innerWidth >= 960 && setOpenNav(false)\r\n    );\r\n  }, []);\r\n \r\n\r\n \r\n  return (\r\n    <Navbar className=\"mx-auto max-w-full  nav \">\r\n      <div className=\"container mx-auto flex items-center justify-around text-white\">\r\n        <Typography\r\n          as=\"a\"\r\n          href=\"home\"\r\n          variant=\"small\"\r\n          className=\"mr-4 cursor-pointer py-1.5 font-bold \"\r\n        >\r\n          <span>Twieets</span>\r\n        </Typography>\r\n        \r\n        <span>\r\n            <a href=\"new\"><button className=\"bg-blue-400 hover:bg-blue-500 rounded-full text-white font-bold py-2 px-4 mr-6 \">New Post</button></a>\r\n        <button onClick={logout} className=\"bg-blue-400 hover:bg-blue-500 rounded-full text-white font-bold py-2 px-4   float-right\">\r\n            Sign Out\r\n        </button></span>\r\n        <IconButton\r\n          variant=\"text\"\r\n          className=\"ml-auto h-6 w-6 text-inherit hover:bg-transparent focus:bg-transparent active:bg-transparent lg:hidden\"\r\n          ripple={false}\r\n          onClick={() => setOpenNav(!openNav)}\r\n        >\r\n          {openNav ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              className=\"h-6 w-6\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      \r\n    </Navbar>\r\n  );\r\n}\r\nexport default Nav;","C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\NewPost.js",["71","72","73"],[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\Tweets.js",[],[],"C:\\Users\\aryan\\OneDrive\\Desktop\\Projects\\my-project\\src\\Pages\\useOnline.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":25,"nodeType":"76","messageId":"77","endLine":1,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":7,"column":30,"nodeType":"76","messageId":"77","endLine":7,"endColumn":37},{"ruleId":"74","severity":1,"message":"79","line":9,"column":8,"nodeType":"76","messageId":"77","endLine":9,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":17},{"ruleId":"74","severity":1,"message":"81","line":21,"column":17,"nodeType":"76","messageId":"77","endLine":21,"endColumn":25},{"ruleId":"74","severity":1,"message":"82","line":22,"column":10,"nodeType":"76","messageId":"77","endLine":22,"endColumn":15},{"ruleId":"74","severity":1,"message":"83","line":22,"column":17,"nodeType":"76","messageId":"77","endLine":22,"endColumn":25},{"ruleId":"74","severity":1,"message":"84","line":25,"column":9,"nodeType":"76","messageId":"77","endLine":25,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":26,"column":9,"nodeType":"76","messageId":"77","endLine":26,"endColumn":22},{"ruleId":"74","severity":1,"message":"86","line":17,"column":10,"nodeType":"76","messageId":"77","endLine":17,"endColumn":14},{"ruleId":"74","severity":1,"message":"84","line":12,"column":9,"nodeType":"76","messageId":"77","endLine":12,"endColumn":17},{"ruleId":"74","severity":1,"message":"87","line":6,"column":3,"nodeType":"76","messageId":"77","endLine":6,"endColumn":12},{"ruleId":"74","severity":1,"message":"88","line":8,"column":3,"nodeType":"76","messageId":"77","endLine":8,"endColumn":9},{"ruleId":"74","severity":1,"message":"86","line":17,"column":10,"nodeType":"76","messageId":"77","endLine":17,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":8,"column":30,"nodeType":"76","messageId":"77","endLine":8,"endColumn":37},{"ruleId":"74","severity":1,"message":"89","line":12,"column":10,"nodeType":"76","messageId":"77","endLine":12,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":12,"column":17,"nodeType":"76","messageId":"77","endLine":12,"endColumn":25},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'signOut' is defined but never used.","'moment' is defined but never used.","'useOnline' is defined but never used.","'setTweet' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'navigate' is assigned a value but never used.","'tweetInputRef' is assigned a value but never used.","'user' is assigned a value but never used.","'MobileNav' is defined but never used.","'Button' is defined but never used.","'tweet' is assigned a value but never used."]